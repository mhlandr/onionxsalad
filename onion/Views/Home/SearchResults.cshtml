@using MongoDB.Bson
@model List<BsonDocument>

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

<!-- This will get the antiforgery token and include it in JavaScript -->
<script>
    const token = '@Antiforgery.GetAndStoreTokens(Context).RequestToken';
</script>

<h2 style="text-align: center;">Search Ahmia</h2>

<form asp-action="Search" method="post" style="display: flex; flex-direction: column; align-items: center; margin-top: 20px;">
    <div style="text-align: center;">
        <input type="text" name="searchTerm" placeholder="Enter search term" required style="padding: 10px; margin-bottom: 10px; width: 300px;" />
        <button type="submit" style="padding: 10px 20px;">Search</button>
    </div>
</form>

<ul>
    @foreach (var result in Model)
    {
        <li>
            <strong>@result["site_name"]</strong> - @result["category"]
            <br />
            <a href="@result["onion_url"]" target="_blank">@result["onion_url"]</a>
            <button type="button" onclick="copyToClipboard('@result["onion_url"]')">Copy URL</button>
            <button type="button" onclick="checkOnlineStatus('@result["onion_url"]', this)">Check if Online</button>
            <span class="online-status"></span>
            <br /><br />
        </li>
    }
</ul>


<script>
    function copyToClipboard(url) {
        var tempInput = document.createElement("input");
        tempInput.value = url;
        document.body.appendChild(tempInput);
        tempInput.select();
        tempInput.setSelectionRange(0, 99999); // For mobile devices
        document.execCommand("copy");
        document.body.removeChild(tempInput);
    }

    function checkOnlineStatus(url, button) {
        // Disable the button while checking
        button.disabled = true;
        button.innerText = "Checking...";

        fetch('/Controllers/TorController', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': '@Antiforgery.GetAndStoreTokens(Context).RequestToken'
            },
            body: JSON.stringify({ onionUrl: url })
        })
            .then(response => response.json())
            .then(data => {
                const statusSpan = button.nextElementSibling;
                if (data.isOnline) {
                    statusSpan.textContent = "Online";
                    statusSpan.style.color = "green";
                } else {
                    statusSpan.textContent = "Offline";
                    statusSpan.style.color = "red";
                }
            })
            .catch(error => {
                console.error('Error:', error);
            })
            .finally(() => {
                button.disabled = false;
                button.innerText = "Check if Online";
            });
    }
</script>
